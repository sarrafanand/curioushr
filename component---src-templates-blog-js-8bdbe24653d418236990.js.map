{"version":3,"sources":["webpack:///./src/templates/blog.js"],"names":["Blog","data","site","allMdx","pageContext","pagination","page","categories","nextPagePath","previousPagePath","posts","map","id","edges","find","edge","node","filter","post","undefined","noSubscribeForm","noVerticalPadding","key","css","bpMaxMD","bpMaxSM","frontmatter","banner","aria-label","title","to","fields","slug","sizes","childImageSharp","fluid","excerpt","pageQuery"],"mappings":"4FAAA,4J,mMAwHeA,UA9GF,SAAC,GAGP,IAAD,IAFJC,KAAQC,EAEJ,EAFIA,KAAMC,EAEV,EAFUA,OAEV,IADJC,YAAeC,EACX,EADWA,WAEPC,GADJ,EADuBC,WAEsBF,EAAzCC,MAAME,EAAmCH,EAAnCG,aAAcC,EAAqBJ,EAArBI,iBAEtBC,EAAQJ,EACXK,KAAI,SAAAC,GAAE,OAAIT,EAAOU,MAAMC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,KAAKJ,KAAOA,QACrDK,QAAO,SAAAC,GAAI,YAAaC,IAATD,KAElB,OACE,YAAC,IAAD,CAAQhB,KAAMA,EAAMkB,iBAAe,GACjC,YAAC,IAAD,MACA,YAAC,IAAD,CAAWC,mBAAiB,GACzBX,EAAMC,KAAI,gBAASO,EAAT,EAAGF,KAAH,OACT,mBACEM,IAAKJ,EAAKN,GACVW,IAAKA,YAAF,wCAGGC,IAHH,qBAMGC,IANH,qDAYGA,IAZH,6CAkBCA,IAlBD,uDAyBFP,EAAKQ,YAAYC,QAChB,mBACEJ,IAAKA,YAAF,+BAECE,IAFD,oBAOH,YAAC,IAAD,CACEG,aAAA,QAAoBV,EAAKQ,YAAYG,MAArC,WACAC,GAAE,IAAMZ,EAAKa,OAAOC,MAEpB,YAAC,IAAD,CAAKC,MAAOf,EAAKQ,YAAYC,OAAOO,gBAAgBC,UAI1D,kBACEZ,IAAG,GAKH,YAAC,IAAD,CACEK,aAAA,QAAoBV,EAAKQ,YAAYG,MAArC,WACAC,GAAE,IAAMZ,EAAKa,OAAOC,MAEnBd,EAAKQ,YAAYG,QAItB,iBACEN,IAAG,GAIFL,EAAKkB,SACH,IACL,YAAC,IAAD,CACEN,GAAE,IAAMZ,EAAKa,OAAOC,KACpBJ,aAAA,SAAqBV,EAAKQ,YAAYG,MAAtC,aAFF,sBAQJ,mBAAKN,IAAG,GACLf,GACC,YAAC,IAAD,CAAMsB,GAAItB,EAAcoB,aAAW,kBAAnC,eAIDnB,GACC,YAAC,IAAD,CAAMqB,GAAIrB,EAAkBmB,aAAW,sBAAvC,oBAKJ,kBACEL,IAAG,OAWN,IAAMc,EAAS","file":"component---src-templates-blog-js-8bdbe24653d418236990.js","sourcesContent":["import React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport Img from 'gatsby-image'\r\nimport { css } from '@emotion/core'\r\nimport Container from 'components/Container'\r\nimport SEO from '../components/SEO'\r\nimport Layout from '../components/Layout'\r\nimport Link from '../components/Link'\r\nimport { bpMaxSM, bpMaxMD } from '../lib/breakpoints'\r\n\r\nconst Blog = ({\r\n  data: { site, allMdx },\r\n  pageContext: { pagination, categories },\r\n}) => {\r\n  const { page, nextPagePath, previousPagePath } = pagination\r\n\r\n  const posts = page\r\n    .map(id => allMdx.edges.find(edge => edge.node.id === id))\r\n    .filter(post => post !== undefined)\r\n\r\n  return (\r\n    <Layout site={site} noSubscribeForm>\r\n      <SEO />\r\n      <Container noVerticalPadding>\r\n        {posts.map(({ node: post }) => (\r\n          <div\r\n            key={post.id}\r\n            css={css`\r\n              :not(:first-of-type) {\r\n                margin-top: 60px;\r\n                ${bpMaxMD} {\r\n                  margin-top: 40px;\r\n                }\r\n                ${bpMaxSM} {\r\n                  margin-top: 20px;\r\n                }\r\n              }\r\n              :first-of-type {\r\n                margin-top: 20px;\r\n                ${bpMaxSM} {\r\n                  margin-top: 20px;\r\n                }\r\n              }\r\n              .gatsby-image-wrapper {\r\n              }\r\n              ${bpMaxSM} {\r\n                padding: 20px;\r\n              }\r\n              display: flex;\r\n              flex-direction: column;\r\n            `}\r\n          >\r\n            {post.frontmatter.banner && (\r\n              <div\r\n                css={css`\r\n                  padding: 60px 60px 40px 60px;\r\n                  ${bpMaxSM} {\r\n                    padding: 20px;\r\n                  }\r\n                `}\r\n              >\r\n                <Link\r\n                  aria-label={`View ${post.frontmatter.title} article`}\r\n                  to={`/${post.fields.slug}`}\r\n                >\r\n                  <Img sizes={post.frontmatter.banner.childImageSharp.fluid} />\r\n                </Link>\r\n              </div>\r\n            )}\r\n            <h2\r\n              css={css`\r\n                margin-top: 30px;\r\n                margin-bottom: 10px;\r\n              `}\r\n            >\r\n              <Link\r\n                aria-label={`View ${post.frontmatter.title} article`}\r\n                to={`/${post.fields.slug}`}\r\n              >\r\n                {post.frontmatter.title}\r\n              </Link>\r\n            </h2>\r\n            {/* <small>{post.frontmatter.date}</small> */}\r\n            <p\r\n              css={css`\r\n                margin-top: 10px;\r\n              `}\r\n            >\r\n              {post.excerpt}\r\n            </p>{' '}\r\n            <Link\r\n              to={`/${post.fields.slug}`}\r\n              aria-label={`view \"${post.frontmatter.title}\" article`}\r\n            >\r\n              Read Article →\r\n            </Link>\r\n          </div>\r\n        ))}\r\n        <div css={css({ marginTop: '30px' })}>\r\n          {nextPagePath && (\r\n            <Link to={nextPagePath} aria-label=\"View next page\">\r\n              Next Page →\r\n            </Link>\r\n          )}\r\n          {previousPagePath && (\r\n            <Link to={previousPagePath} aria-label=\"View previous page\">\r\n              ← Previous Page\r\n            </Link>\r\n          )}\r\n        </div>\r\n        <hr\r\n          css={css`\r\n            margin: 50px 0;\r\n          `}\r\n        />\r\n      </Container>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Blog\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      ...site\r\n    }\r\n    allMdx(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { fields: { isPost: { eq: true } } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          excerpt(pruneLength: 300)\r\n          id\r\n          fields {\r\n            title\r\n            slug\r\n            date\r\n          }\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            banner {\r\n              childImageSharp {\r\n                fluid(maxWidth: 600) {\r\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n                }\r\n              }\r\n            }\r\n            slug\r\n            keywords\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}